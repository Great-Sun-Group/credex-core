name: Deploy Databases

on:
  workflow_dispatch:

jobs:
  deploy_neo4j:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/stage' && 'staging' || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/stage" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate Neo4j Credentials
        run: |
          generate_username() {
            echo "neo4j$(openssl rand -base64 8 | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)"
          }
          generate_password() {
            echo "neo4j$(openssl rand -hex 3 | tr '[:lower:]' '[:upper:]')"
          }
          NEO_4J_LEDGER_SPACE_USER=$(generate_username)
          NEO_4J_SEARCH_SPACE_USER=$(generate_username)
          NEO_4J_LEDGER_SPACE_PASS=$(generate_password)
          NEO_4J_SEARCH_SPACE_PASS=$(generate_password)
          echo "NEO_4J_LEDGER_SPACE_USER=$NEO_4J_LEDGER_SPACE_USER" >> $GITHUB_ENV
          echo "NEO_4J_SEARCH_SPACE_USER=$NEO_4J_SEARCH_SPACE_USER" >> $GITHUB_ENV
          echo "NEO_4J_LEDGER_SPACE_PASS=$NEO_4J_LEDGER_SPACE_PASS" >> $GITHUB_ENV
          echo "NEO_4J_SEARCH_SPACE_PASS=$NEO_4J_SEARCH_SPACE_PASS" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init and Plan
        env:
          TF_VAR_environment: ${{ env.ENVIRONMENT }}
          TF_VAR_create_resource: "true"
          TF_VAR_create_ecr: "false"
          TF_VAR_create_ecs_cluster: "false"
          TF_VAR_create_log_group: "false"
          TF_VAR_neo4j_ledger_space_user: ${{ env.NEO_4J_LEDGER_SPACE_USER }}
          TF_VAR_neo4j_search_space_user: ${{ env.NEO_4J_SEARCH_SPACE_USER }}
          TF_VAR_neo4j_ledger_space_pass: ${{ env.NEO_4J_LEDGER_SPACE_PASS }}
          TF_VAR_neo4j_search_space_pass: ${{ env.NEO_4J_SEARCH_SPACE_PASS }}
        run: |
          cd terraform
          terraform init
          terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}
          terraform plan -out=tfplan -target=module.neo4j \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="create_resource=true" \
            -var="create_ecr=false" \
            -var="create_ecs_cluster=false" \
            -var="create_log_group=false"

      - name: Terraform Apply
        if: success()
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Get Neo4j Information
        run: |
          cd terraform
          echo "Terraform outputs:"
          terraform output
          
          NEO_4J_LEDGER_SPACE_BOLT_URL=$(terraform output -raw neo4j_ledger_space_bolt_url || echo "FAILED_TO_RETRIEVE")
          NEO_4J_SEARCH_SPACE_BOLT_URL=$(terraform output -raw neo4j_search_space_bolt_url || echo "FAILED_TO_RETRIEVE")
          
          if [ "$NEO_4J_LEDGER_SPACE_BOLT_URL" = "FAILED_TO_RETRIEVE" ] || [ "$NEO_4J_SEARCH_SPACE_BOLT_URL" = "FAILED_TO_RETRIEVE" ]; then
            echo "Failed to retrieve one or both Neo4j Bolt URLs. Please check Terraform output for errors."
          else
            echo "NEO_4J_LEDGER_SPACE_BOLT_URL=$NEO_4J_LEDGER_SPACE_BOLT_URL" >> $GITHUB_ENV
            echo "NEO_4J_SEARCH_SPACE_BOLT_URL=$NEO_4J_SEARCH_SPACE_BOLT_URL" >> $GITHUB_ENV
          fi

      - name: Print Neo4j Information
        run: |
          echo "Please manually add the following secrets to your GitHub repository for the ${{ env.ENVIRONMENT }} environment:"
          echo "NEO_4J_LEDGER_SPACE_BOLT_URL: $NEO_4J_LEDGER_SPACE_BOLT_URL"
          echo "NEO_4J_SEARCH_SPACE_BOLT_URL: $NEO_4J_SEARCH_SPACE_BOLT_URL"
          echo "NEO_4J_LEDGER_SPACE_USER: $NEO_4J_LEDGER_SPACE_USER"
          echo "NEO_4J_LEDGER_SPACE_PASS: $NEO_4J_LEDGER_SPACE_PASS"
          echo "NEO_4J_SEARCH_SPACE_USER: $NEO_4J_SEARCH_SPACE_USER"
          echo "NEO_4J_SEARCH_SPACE_PASS: $NEO_4J_SEARCH_SPACE_PASS"
