#!/bin/bash

# Enable debugging
set -x

LOG_FILE="post-commit.log"

echo "Running post-commit hook" >> "$LOG_FILE"

# Check if this is a code summary update commit
if [[ "$(git log -1 --pretty=%B)" == "Update code summary" ]]; then
    echo "Skipping code summary update for code summary commit" >> "$LOG_FILE"
    exit 0
fi

# Run the update script and capture any errors
if ! ./src/utils/update_code_summary.sh >> "$LOG_FILE" 2>&1; then
    echo "Error: Failed to update code summary" >> "$LOG_FILE"
    exit 1
fi

echo "Code summary updated after commit" >> "$LOG_FILE"

# Check if there are changes to docs/code_summary.md file
if git status --porcelain docs/code_summary.md | grep -q '^??'; then
    echo "New code summary file detected" >> "$LOG_FILE"
    git add docs/code_summary.md
elif git diff --quiet docs/code_summary.md; then
    echo "No changes to code summary" >> "$LOG_FILE"
else
    echo "Changes detected in code summary" >> "$LOG_FILE"
    git add docs/code_summary.md
fi

if git diff --staged --quiet; then
    echo "No staged changes for code summary" >> "$LOG_FILE"
else
    echo "Committing code summary changes" >> "$LOG_FILE"
    if ! git commit -m "Update code summary" --no-verify >> "$LOG_FILE" 2>&1; then
        echo "Failed to commit code summary changes" >> "$LOG_FILE"
        exit 1
    fi
    echo "Code summary committed after main commit" >> "$LOG_FILE"
fi

echo "Post-commit hook completed" >> "$LOG_FILE"

# Disable debugging
set +x