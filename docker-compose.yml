services:
  server:
    build:
      context: .
      target: ${BUILD_TARGET:-production}
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      JWT_SECRET: ${JWT_SECRET}
      CLIENT_API_KEY: ${CLIENT_API_KEY}
      OPEN_EXCHANGE_RATES_API: ${OPEN_EXCHANGE_RATES_API}
      NEO_4J_LEDGER_SPACE_BOLT_URL: ${NEO_4J_LEDGER_SPACE_BOLT_URL}
      NEO_4J_LEDGER_SPACE_USER: ${NEO_4J_LEDGER_SPACE_USER}
      NEO_4J_LEDGER_SPACE_PASS: ${NEO_4J_LEDGER_SPACE_PASS}
      NEO_4J_SEARCH_SPACE_BOLT_URL: ${NEO_4J_SEARCH_SPACE_BOLT_URL}
      NEO_4J_SEARCH_SPACE_USER: ${NEO_4J_SEARCH_SPACE_USER}
      NEO_4J_SEARCH_SPACE_PASS: ${NEO_4J_SEARCH_SPACE_PASS}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./logs:/app/logs
      - /app/node_modules
    restart: unless-stopped

  cloudwatch-agent:
    image: amazon/cloudwatch-agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AWS_REGION: ${AWS_REGION:-af-south-1}
    profiles:
      - aws
