name: Deploy Connectors

on:
  workflow_dispatch:

jobs:
  deploy_infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/stage' && 'staging' || 'development' }}

    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/stage' && 'staging' || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform
          echo "Initializing Terraform..."
          terraform init

      - name: Terraform Plan
        env:
          TF_VAR_environment: ${{ env.ENVIRONMENT }}
        run: |
          cd terraform
          echo "Planning Terraform changes..."
          terraform plan -input=false -out=tfplan -target=module.connectors

      - name: Terraform Apply
        env:
          TF_VAR_environment: ${{ env.ENVIRONMENT }}
        run: |
          cd terraform
          echo "Applying Terraform changes..."
          terraform apply -auto-approve -input=false tfplan

          echo "Terraform apply completed successfully"

      - name: Print Infrastructure Outputs
        run: |
          cd terraform
          echo "Retrieving infrastructure outputs..."
          echo "========================================"
          echo "Infrastructure Outputs:"
          echo "========================================"
          terraform output
          echo "========================================"
          echo "Key Outputs:"
          echo "VPC ID: $(terraform output -raw vpc_id)"
          echo "Subnet IDs: $(terraform output -raw subnet_ids)"
          echo "Neo4j Security Group ID: $(terraform output -raw neo4j_security_group_id)"
          echo "Key Pair Name: $(terraform output -raw key_pair_name)"
          echo "ALB Security Group ID: $(terraform output -raw alb_security_group_id)"
          echo "========================================"
