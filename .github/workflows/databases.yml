name: Deploy Databases

on:
  workflow_dispatch:

jobs:
  deploy_neo4j:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/stage' && 'staging' || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/stage" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init -backend-config="key=${{ env.ENVIRONMENT }}/terraform.tfstate"

      - name: Terraform Apply
        env:
          TF_VAR_environment: ${{ env.ENVIRONMENT }}
          TF_VAR_create_neo4j_instances: "true"
          TF_VAR_create_key_pair: "true"
          TF_VAR_neo4j_enterprise_license: ${{ secrets.NEO4J_ENTERPRISE_LICENSE }}
        run: |
          cd terraform
          terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}
          terraform apply -auto-approve -target=module.neo4j

      - name: Print Neo4j Information
        run: |
          cd terraform
          echo "Neo4j Information for ${{ env.ENVIRONMENT }} environment:"
          echo "----------------------------------------"
          echo "NEO_4J_LEDGER_SPACE_BOLT_URL: $(terraform output -raw NEO_4J_LEDGER_SPACE_BOLT_URL)"
          echo "NEO_4J_SEARCH_SPACE_BOLT_URL: $(terraform output -raw NEO_4J_SEARCH_SPACE_BOLT_URL)"
          echo "NEO_4J_LEDGER_SPACE_USERNAME: $(terraform output -raw NEO_4J_LEDGER_SPACE_USERNAME)"
          echo "NEO_4J_SEARCH_SPACE_USERNAME: $(terraform output -raw NEO_4J_SEARCH_SPACE_USERNAME)"
          echo "NEO_4J_LEDGER_SPACE_PASSWORD: $(terraform output -raw NEO_4J_LEDGER_SPACE_PASSWORD)"
          echo "NEO_4J_SEARCH_SPACE_PASSWORD: $(terraform output -raw NEO_4J_SEARCH_SPACE_PASSWORD)"
          echo "----------------------------------------"
          echo "NEO4J_PRIVATE_KEY:"
          terraform output -raw neo4j_private_key
          echo "----------------------------------------"
          echo "Please save these values securely. You may need to manually set them as GitHub secrets or use them in your application configuration."
