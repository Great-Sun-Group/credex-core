name: Deploy Databases

on:
  workflow_dispatch:

jobs:
  deploy_neo4j:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/stage' && 'staging' || 'development' }}

    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/stage' && 'staging' || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup and Initialize Terraform Backend
        run: |
          echo "Current environment: ${ENVIRONMENT}"

          # Initialize Terraform
          cd terraform
          echo "Initializing Terraform..."
          terraform init \
            -backend-config="bucket=credex-terraform-state-${ENVIRONMENT}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=af-south-1" \
            -backend-config="dynamodb_table=credex-terraform-state-lock-${ENVIRONMENT}"

      - name: Terraform Plan
        env:
          TF_VAR_environment: ${{ env.ENVIRONMENT }}
          TF_VAR_neo4j_enterprise_license: ${{ secrets.NEO4J_ENTERPRISE_LICENSE }}
          # Add dummy values for required variables since they're not used by the databases module
          TF_VAR_jwt_secret: "dummy"
          TF_VAR_client_api_key: "dummy"
          TF_VAR_open_exchange_rates_api: "dummy"
        run: |
          cd terraform
          echo "Current environment: ${ENVIRONMENT}"
          echo "Planning Terraform changes..."
          terraform plan -input=false -out=tfplan -target=module.databases

      - name: Terraform Apply
        env:
          TF_VAR_environment: ${{ env.ENVIRONMENT }}
          TF_VAR_neo4j_enterprise_license: ${{ secrets.NEO4J_ENTERPRISE_LICENSE }}
          # Add dummy values for required variables since they're not used by the databases module
          TF_VAR_jwt_secret: "dummy"
          TF_VAR_client_api_key: "dummy"
          TF_VAR_open_exchange_rates_api: "dummy"
        run: |
          cd terraform
          echo "Current environment: ${ENVIRONMENT}"
          echo "Applying Terraform changes..."
          terraform apply -auto-approve -input=false tfplan

          echo "Terraform apply completed successfully"

      - name: Print Database Infrastructure Outputs
        run: |
          cd terraform
          echo "Retrieving database infrastructure outputs..."
          echo "========================================"
          echo "Database Infrastructure Outputs:"
          echo "========================================"
          terraform output -json module.databases | jq 'to_entries | map("\(.key): \(.value.value)") | .[]'
          echo "========================================"
          echo "Please save these values securely. You may need to manually set them as GitHub secrets or use them in your application configuration."
