name: deploy_to_prod
run-name: ${{ github.actor }} pushed to prod_auto_deploy_setup with commit message '${{ github.event.head_commit.message }}'

on: 
  push: 
    branches:
      - prod
  pull_request:
    branches:
      - prod

jobs: 
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with: 
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: .

      # For running tests
      # - name: Run tests
      #   run: npm test
      #   working-directory: .

      # - name: Build project
      #   run: npm run build
      #   working-directory: .

      - name: Set up SSH deploy keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to AWS EC2
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: /var/www/html/${{secrets.PROJECT_DIRECTORY}}/
          remote_host: ${{ secrets.EC2_IP }}
          remote_user: ec2-user
          remote_key: "${{ secrets.SSH_KEY }}"

      - name: ðŸ“‚ Set ownership on remote server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > taku263_credex.pem
          chmod 600 taku263_credex.pem

          # Create known_hosts file if it doesn't exist
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/${{ secrets.KNOWN_HOSTS }}
          
          # Clear old key from known_hosts
          ssh-keygen -R <your_ec2_ip_address> >> /home/runner/.ssh/known_hosts

          # Run the SSH command
          ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} \
          "sudo chown -R ec2-user:apache /var/www/html/<your_project_directory>/ && chmod 777 -R /var/www/html/<your_project_directory>/<your_code_directory>/storage && chmod -R 777 /var/www/html/<your_project_directory>/<your_code_directory>/bootstrap/cache/ && cd /var/www/html/<your_project_directory>/<your_code_directory>/ && sudo npm install -g vite  && npm install && sudo chown -R ec2-user:apache /var/www/html/<your_project_directory>/ && chmod +x /var/www/html/<your_project_directory>/<your_code_directory>/dev_run.sh"          
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}